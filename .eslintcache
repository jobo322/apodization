[{"/home/abolanos/git/jobo322/apodization/src/shapes/__tests__/lorentzToGauss.test.ts":"1","/home/abolanos/git/jobo322/apodization/src/applyWindow.ts":"2","/home/abolanos/git/jobo322/apodization/src/index.ts":"3","/home/abolanos/git/jobo322/apodization/src/shapes/exponential.ts":"4","/home/abolanos/git/jobo322/apodization/src/shapes/lorentzToGauss.ts":"5"},{"size":337,"mtime":1657989834442,"results":"6","hashOfConfig":"7"},{"size":1350,"mtime":1657991381172,"results":"8","hashOfConfig":"7"},{"size":111,"mtime":1657969562343,"results":"9","hashOfConfig":"7"},{"size":396,"mtime":1657970107666,"results":"10","hashOfConfig":"7"},{"size":968,"mtime":1657991361672,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"er89n",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/abolanos/git/jobo322/apodization/src/shapes/__tests__/lorentzToGauss.test.ts",[],[],"/home/abolanos/git/jobo322/apodization/src/applyWindow.ts",["28"],[],"import { DoubleArray } from 'cheminfo-types';\n\nimport { ExponentialOptions } from './shapes/exponential';\nimport { LorentzToGaussOptions } from './shapes/lorentzToGauss';\n\ntype ShapeOptions = ExponentialOptions | LorentzToGaussOptions;\n\ninterface ApplyWindowOptions {\n  shape: ShapeOptions;\n  /**\n   * Start Location for Applying Apodize Window\n   */\n  start?: number;\n  /**\n   * number of points at the end of the shape to apply the window function inverted\n   * @default 0\n   */\n  pointsToShift?: number;\n}\ntype FunctionGenerator = (options: any) => (i: number) => number;\n\n/**\n * pure function that applies a window function to the input data.\n */\nexport function applyWindow(\n  data: DoubleArray,\n  func: FunctionGenerator,\n  options: ApplyWindowOptions,\n) {\n  const { shape: shapeOptions, start = 0, pointsToShift = 0 } = options;\n\n  const dataLength = data.length;\n\n  let length = 'length' in shapeOptions ? shapeOptions.length : data.length;\n  const generator = func({ ...options, length });\n\n  const result = new Float64Array(data);\n  const firstEndPoint = Math.min(start + length, dataLength - pointsToShift);\n  for (let i = start, j = 0; i < firstEndPoint; i++) {\n    result[i] *= generator(j++);\n  }\n\n  for (let i = dataLength - 1, j = 0; i > dataLength - pointsToShift - 1; i--) {\n    result[i] *= generator(j++);\n  }\n\n  return result;\n}\n","/home/abolanos/git/jobo322/apodization/src/index.ts",[],[],"/home/abolanos/git/jobo322/apodization/src/shapes/exponential.ts",[],[],"/home/abolanos/git/jobo322/apodization/src/shapes/lorentzToGauss.ts",[],[],{"ruleId":"29","severity":1,"message":"30","line":20,"column":36,"nodeType":"31","messageId":"32","endLine":20,"endColumn":39,"suggestions":"33"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["34","35"],{"messageId":"36","fix":"37","desc":"38"},{"messageId":"39","fix":"40","desc":"41"},"suggestUnknown",{"range":"42","text":"43"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"42","text":"44"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[544,547],"unknown","never"]